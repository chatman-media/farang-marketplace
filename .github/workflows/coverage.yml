# 🧪 Modern Coverage Workflow for Thailand Marketplace
# Runs tests, generates coverage, and uploads to Codecov

name: 🧪 Coverage Report

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    # Run coverage daily at 2 AM UTC
    - cron: "0 2 * * *"

env:
  NODE_VERSION: "22"
  BUN_VERSION: "1.2.1"

jobs:
  coverage:
    name: 📊 Generate Coverage Report
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: 🥟 Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: 📦 Install dependencies
        run: bun install --frozen-lockfile

      - name: 🔧 Setup environment
        run: |
          cp .env.example .env
          echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/test_db" >> .env
          echo "REDIS_URL=redis://localhost:6379" >> .env

      - name: 🏗️ Build packages
        run: bun run build

      - name: 🧪 Run tests with coverage
        run: bun run test:coverage
        env:
          NODE_ENV: test
          CI: true

      - name: 🔄 Merge coverage reports
        run: |
          chmod +x scripts/merge-coverage.sh
          ./scripts/merge-coverage.sh

      - name: 📊 Generate coverage report
        run: |
          chmod +x scripts/coverage-report.sh
          ./scripts/coverage-report.sh
        env:
          NODE_ENV: production
          CI: true

      - name: ☁️ Upload to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/merged/lcov.info
          flags: unittests
          name: thailand-marketplace-coverage
          fail_ci_if_error: false
          verbose: true

      - name: 📈 Upload coverage artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: |
            coverage/
            !coverage/reports/
          retention-days: 30

      - name: 💬 Comment coverage on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');

            try {
              const coverageData = JSON.parse(fs.readFileSync('coverage/merged/coverage-summary.json', 'utf8'));
              const coverage = coverageData.total.lines.pct;
              
              let emoji = '🔴';
              let status = 'needs improvement';
              
              if (coverage >= 90) {
                emoji = '🟢';
                status = 'excellent';
              } else if (coverage >= 80) {
                emoji = '🟡';
                status = 'good';
              } else if (coverage >= 70) {
                emoji = '🟠';
                status = 'fair';
              }
              
              const comment = `## ${emoji} Coverage Report
              
              **Overall Coverage: ${coverage}% (${status})**
              
              | Metric | Coverage |
              |--------|----------|
              | Lines | ${coverageData.total.lines.pct}% |
              | Functions | ${coverageData.total.functions.pct}% |
              | Branches | ${coverageData.total.branches.pct}% |
              | Statements | ${coverageData.total.statements.pct}% |
              
              📊 [View detailed report](https://app.codecov.io/gh/${{ github.repository }}/pull/${{ github.event.number }})
              `;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            } catch (error) {
              console.log('Could not post coverage comment:', error.message);
            }

  coverage-check:
    name: 🎯 Coverage Quality Gate
    runs-on: ubuntu-latest
    needs: coverage
    if: github.event_name == 'pull_request'

    steps:
      - name: 📥 Download coverage artifacts
        uses: actions/download-artifact@v4
        with:
          name: coverage-reports
          path: coverage/

      - name: 🎯 Check coverage threshold
        run: |
          if [ -f "coverage/merged/coverage-summary.json" ]; then
            coverage=$(node -e "console.log(JSON.parse(require('fs').readFileSync('coverage/merged/coverage-summary.json', 'utf8')).total.lines.pct)")
            echo "Coverage: ${coverage}%"
            
            if (( $(echo "$coverage < 70" | bc -l) )); then
              echo "❌ Coverage ${coverage}% is below minimum threshold of 70%"
              exit 1
            else
              echo "✅ Coverage ${coverage}% meets minimum threshold"
            fi
          else
            echo "❌ Coverage summary not found"
            exit 1
          fi
